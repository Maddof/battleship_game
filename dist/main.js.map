{"version":3,"file":"main.js","mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;ACA+B;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;;AAEA,oBAAoB,UAAU;AAC9B;AACA,sBAAsB,aAAa;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,wCAAI;AACzB;AACA,sBAAsB,YAAY;AAClC;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;AACA;AACA,MAAM;AACN;AACA,sBAAsB,YAAY;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,wCAAI;AACxC;AACA;AACA,MAAM;AACN;AACA,gCAAgC,MAAM;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEqB;;;;;;;;;;;;;;;;AC5EmB;;AAExC;AACA;AACA,2BAA2B,iDAAS;AACpC;AACA;AACA;;AAEkB;;;;;;;;;;;;;;;ACTlB;AACA;AACA;;AAEsB;;;;;;;;;;;;;;;ACJtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEgB;;;;;;;UCrBhB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;ACNkD;AACF;AACT;AACI;AACtB;;AAErB;AACA;AACA;;AAEe;AACf;AACA;;AAEA;AACA,+DAAU;;AAEV;;AAEA,sBAAsB,yDAAS;AAC/B,oDAAoD;AACpD,sDAAsD;;AAEtD,sBAAsB;AACtB,8BAA8B;;AAE9B;;AAEA,qDAAqD;AACrD,qDAAqD;AACrD,4BAA4B;AAC5B,4BAA4B;AAC5B,8BAA8B;;AAE9B;;AAEA;;AAEA;;AAEA,sBAAsB,oDAAM;;AAE5B;;AAEA;;AAEA","sources":["webpack://battleship/./src/style.css?e320","webpack://battleship/./src/modules/gameboard.js","webpack://battleship/./src/modules/players.js","webpack://battleship/./src/modules/saygoodbye.js","webpack://battleship/./src/modules/ships.js","webpack://battleship/webpack/bootstrap","webpack://battleship/webpack/runtime/define property getters","webpack://battleship/webpack/runtime/hasOwnProperty shorthand","webpack://battleship/webpack/runtime/make namespace object","webpack://battleship/./src/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","import { Ship } from \"./ships\";\n\nclass Gameboard {\n  constructor() {\n    this.board = this.createBoard();\n    this.ships = [];\n    this.missedAttacks = [];\n  }\n  createBoard() {\n    const rows = 10;\n    const columns = 10;\n    const cellContent = null; // Using null to represent an empty cell\n    const board = [];\n\n    for (let i = 0; i < rows; i++) {\n      board[i] = [];\n      for (let j = 0; j < columns; j++) {\n        board[i][j] = cellContent;\n      }\n    }\n    return board;\n  }\n\n  // Places and checks if it can place a ship\n  // Returns true if placed\n  placeShip(length, startX, startY, isHorizontal) {\n    const ship = new Ship(length);\n    if (this.canPlaceShip(length, startX, startY, isHorizontal)) {\n      for (let i = 0; i < length; i++) {\n        if (isHorizontal) {\n          this.board[startY][startX + i] = ship;\n        } else {\n          this.board[startY + i][startX] = ship;\n        }\n      }\n      this.ships.push(ship);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  canPlaceShip(length, startX, startY, isHorizontal) {\n    if (isHorizontal) {\n      // If it exceeds the gameboard return false\n      if (startX + length > 10) return false;\n      for (let i = 0; i < length; i++) {\n        if (this.board[startY][startX + i] !== null) return false;\n      }\n    } else {\n      if (startY + length > 10) return false;\n      for (let i = 0; i < length; i++) {\n        if (this.board[startY + i][startX] !== null) return false;\n      }\n    }\n    return true;\n  }\n\n  receiveAttack(x, y) {\n    if (this.board[y][x] instanceof Ship) {\n      this.board[y][x].hit();\n      return true;\n    } else {\n      this.board[y][x] = \"miss\";\n      this.missedAttacks.push({ x, y });\n      return false;\n    }\n  }\n\n  allShipsSunk() {\n    if (this.ships.every((ship) => ship.sunk) == false) {\n      return false;\n    } else return true;\n  }\n}\n\nexport { Gameboard };\n","import { Gameboard } from \"./gameboard\";\n\nclass Player {\n  constructor() {\n    this.playerBoard = new Gameboard();\n    this.winner = false;\n  }\n}\n\nexport { Player };\n","function sayGoodBye() {\n  console.log(\"Goodbye!\");\n}\n\nexport { sayGoodBye };\n","class Ship {\n  constructor(length, hits = 0, sunk = false) {\n    this.length = length;\n    this.hits = hits;\n    this.sunk = sunk;\n  }\n  hit() {\n    this.hits += 1;\n    if (this.hits >= this.length) {\n      this.sunk = true;\n    }\n  }\n  isSunk() {\n    if (this.hits >= this.length) return true;\n    else return false;\n    //return this.sunk;\n  }\n}\n\nlet ship1 = new Ship(3, 0, false);\n\nexport { Ship };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { sayGoodBye } from \"./modules/saygoodbye\";\nimport { Gameboard } from \"./modules/gameboard\";\nimport { Ship } from \"./modules/ships\";\nimport { Player } from \"./modules/players\";\nimport \"./style.css\";\n\nfunction sayHello() {\n  console.log(\"Hello world\");\n}\n\nexport default function add(a, b) {\n  return a + b;\n}\n\nsayHello();\nsayGoodBye();\n\n// example\n\nconst gameboard = new Gameboard();\nconst success = gameboard.placeShip(3, 0, 0, true); // Place a horizontal ship of length 3 at (0, 0)\nconst success2 = gameboard.placeShip(2, 2, 1, false); // Place a vertical ship of length 2 at (2, 1)\n\nconsole.log(success); // true if the ship was placed successfully\nconsole.log(gameboard.board); // The board state with the ship placed\n\nconsole.log(gameboard.ships);\n\nconst attackResult1 = gameboard.receiveAttack(0, 0); // Should be a hit\nconst attackResult2 = gameboard.receiveAttack(1, 1); // Should be a miss\nconsole.log(attackResult1); // true\nconsole.log(attackResult2); // false\nconsole.log(gameboard.board); // The board state with hits and misses\n\nconsole.log(gameboard.missedAttacks);\n\nconsole.log(gameboard.ships);\n\nconsole.log(gameboard.allShipsSunk());\n\nconst newPlayer = new Player();\n\nconsole.log(newPlayer.winner);\n\nconsole.log(newPlayer.playerBoard);\n\nconsole.log(\"test\");\n"],"names":[],"sourceRoot":""}