{"version":3,"file":"main.js","mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;ACA+B;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;;AAEA,oBAAoB,UAAU;AAC9B;AACA,sBAAsB,aAAa;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,wCAAI;AACzB;AACA,sBAAsB,YAAY;AAClC;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;AACA;AACA,MAAM;AACN;AACA,sBAAsB,YAAY;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,wCAAI;AACxC;AACA;AACA,MAAM;AACN;AACA,gCAAgC,MAAM;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA,qCAAqC;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEqB;;;;;;;;;;;;;;;;ACxFmB;;AAExC;AACA;AACA,2BAA2B,iDAAS;AACpC;AACA;AACA;;AAEkB;;;;;;;;;;;;;;;ACTlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEgB;;;;;;;;;;;;;;;;;ACnBwB;;AAExC;;AAEA,wBAAwB,iDAAS;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL,GAAG;AACH;;AAE0C;;;;;;;;;;;;;;;;;;ACnBF;AACT;AACY;;AAE3C;;AAEA,wBAAwB,wCAAI;AAC5B,uBAAuB,wCAAI;AAC3B,0BAA0B,wCAAI;AAC9B,0BAA0B,wCAAI;AAC9B,2BAA2B,wCAAI;;AAE/B,oBAAoB,iDAAS;;AAE7B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,8DAA8D;;AAE9D;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,qBAAqB;;AAErB;AACA;AACA;AACA;AACA,IAAI,OAAO,mDAAW;;AAEtB,mCAAmC,YAAY,IAAI,YAAY;;AAE/D,iBAAiB,mDAAW;;AAE5B;AACA,gBAAgB,YAAY,aAAa,YAAY;AACrD;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA,MAAM,mDAAW;AACjB;AACA;AACA,8BAA8B;AAC9B,QAAQ;AACR;AACA;;AAE2B;;;;;;;UCxG3B;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;ACNgD;AACT;AACI;AACS;AACK;AACpC;;AAErB,iEAAe;AACf,qEAAiB","sources":["webpack://battleship/./src/style.css?e320","webpack://battleship/./src/modules/gameboard.js","webpack://battleship/./src/modules/players.js","webpack://battleship/./src/modules/ships.js","webpack://battleship/./src/modules/ui_ player.js","webpack://battleship/./src/modules/ui_comp.js","webpack://battleship/webpack/bootstrap","webpack://battleship/webpack/runtime/define property getters","webpack://battleship/webpack/runtime/hasOwnProperty shorthand","webpack://battleship/webpack/runtime/make namespace object","webpack://battleship/./src/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","import { Ship } from \"./ships\";\n\nclass Gameboard {\n  constructor() {\n    this.board = this.createBoard();\n    this.ships = [];\n    this.missedAttacks = [];\n  }\n  createBoard() {\n    const rows = 10;\n    const columns = 10;\n    const cellContent = null; // Using null to represent an empty cell\n    const board = [];\n\n    for (let i = 0; i < rows; i++) {\n      board[i] = [];\n      for (let j = 0; j < columns; j++) {\n        board[i][j] = cellContent;\n      }\n    }\n    return board;\n  }\n\n  // Places and checks if it can place a ship\n  // Returns true if placed\n  placeShip(length, startX, startY, isHorizontal) {\n    const ship = new Ship(length);\n    if (this.canPlaceShip(length, startX, startY, isHorizontal)) {\n      for (let i = 0; i < length; i++) {\n        if (isHorizontal) {\n          this.board[startY][startX + i] = ship;\n        } else {\n          this.board[startY + i][startX] = ship;\n        }\n      }\n      this.ships.push(ship);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  canPlaceShip(length, startX, startY, isHorizontal) {\n    if (isHorizontal) {\n      // If it exceeds the gameboard return false\n      if (startX + length > 10) return false;\n      for (let i = 0; i < length; i++) {\n        if (this.board[startY][startX + i] !== null) return false;\n      }\n    } else {\n      if (startY + length > 10) return false;\n      for (let i = 0; i < length; i++) {\n        if (this.board[startY + i][startX] !== null) return false;\n      }\n    }\n    return true;\n  }\n\n  receiveAttack(x, y) {\n    if (this.board[y][x] instanceof Ship) {\n      this.board[y][x].hit();\n      return true;\n    } else {\n      this.board[y][x] = \"miss\";\n      this.missedAttacks.push({ x, y });\n      return false;\n    }\n  }\n\n  allShipsSunk() {\n    if (this.ships.every((ship) => ship.sunk) == false) {\n      return false;\n    } else return true;\n  }\n\n  resetBoard() {\n    this.ships.length = 0;\n    this.missedAttacks.length = 0;\n    this.board = this.createBoard(); // Reset the board\n  }\n\n  isAlreadyAttacked(x, y) {\n    return this.missedAttacks.some(\n      (attack) => attack.x === x && attack.y === y\n    );\n  }\n}\n\nexport { Gameboard };\n","import { Gameboard } from \"./gameboard\";\n\nclass Player {\n  constructor() {\n    this.playerBoard = new Gameboard();\n    this.winner = false;\n  }\n}\n\nexport { Player };\n","class Ship {\n  constructor(length, hits = 0, sunk = false) {\n    this.length = length;\n    this.hits = hits;\n    this.sunk = sunk;\n  }\n  hit() {\n    this.hits += 1;\n    if (this.hits >= this.length) {\n      this.sunk = true;\n    }\n  }\n  isSunk() {\n    if (this.hits >= this.length) return true;\n    else return false;\n    //return this.sunk;\n  }\n}\n\nexport { Ship };\n","import { Gameboard } from \"./gameboard\";\n\nconst playerBoardWrapper = document.querySelector(\".player_board\");\n\nconst playerBoard = new Gameboard();\n\nfunction renderPlayerBoard() {\n  playerBoard.board.forEach((row, y) => {\n    row.forEach((cell, x) => {\n      const gridCell = document.createElement(\"div\");\n      gridCell.classList.add(\"player-cell\");\n      gridCell.dataset.x = x;\n      gridCell.dataset.y = y;\n\n      playerBoardWrapper.appendChild(gridCell);\n    });\n  });\n}\n\nexport { renderPlayerBoard, playerBoard };\n","import { Gameboard } from \"./gameboard\";\nimport { Ship } from \"./ships\";\nimport { playerBoard } from \"./ui_ player\";\n\nconst compBoardWrapper = document.querySelector(\".comp_board\");\n\nconst carrierShip = new Ship(5);\nconst battleShip = new Ship(4);\nconst destroyerShip = new Ship(3);\nconst submarineShip = new Ship(3);\nconst patrolboatShip = new Ship(2);\n\nvar compBoard = new Gameboard();\n\nfunction placeCompShips() {\n  console.log(compBoard.ships);\n\n  compBoard.resetBoard();\n  console.log(compBoard.ships);\n\n  compBoard.placeShip(2, 0, 0, true);\n  // compBoard.placeShip(battleShip.length, 0, 1, true);\n  // compBoard.placeShip(destroyerShip.length, 0, 2, true);\n  // compBoard.placeShip(submarineShip.length, 0, 3, true);\n  // compBoard.placeShip(patrolboatShip.length, 0, 4, true);\n}\n\nfunction renderCompBoard() {\n  placeCompShips();\n  compBoardWrapper.innerHTML = \"\";\n  compBoard.board.forEach((row, y) => {\n    row.forEach((cell, x) => {\n      const gridCell = document.createElement(\"div\");\n      gridCell.classList.add(\"comp-cell\");\n      gridCell.dataset.x = x;\n      gridCell.dataset.y = y;\n\n      compBoardWrapper.appendChild(gridCell);\n\n      gridCell.addEventListener(\"click\", handleCellClick);\n    });\n  });\n}\n\n// Function to handle cell click event\nconst handleCellClick = (event) => {\n  const x = parseInt(event.target.dataset.x);\n  const y = parseInt(event.target.dataset.y);\n  console.log(x + \" \" + y);\n  const attackResult = compBoard.receiveAttack(x, y);\n  if (attackResult) {\n    event.target.classList.add(\"hit\");\n  } else {\n    event.target.classList.add(\"miss\");\n  }\n  event.target.removeEventListener(\"click\", handleCellClick); // Remove event listener after click to prevent re-click\n\n  if (compBoard.allShipsSunk()) {\n    console.log(\"All ships sunk\");\n    setTimeout(() => {\n      renderCompBoard();\n    }, 1000);\n  }\n  compAttack();\n};\n\nfunction compAttack() {\n  console.log(\"computer attacks...\");\n  let compXAttack;\n  let compYAttack;\n  let attackResult;\n\n  const playerBoardWrapper = document.querySelector(\".player_board\");\n\n  let compAttack = { x: compXAttack, y: compYAttack };\n\n  // Ensure unique attacks\n  do {\n    compXAttack = Math.floor(Math.random() * 10);\n    compYAttack = Math.floor(Math.random() * 10);\n  } while (playerBoard.isAlreadyAttacked(compXAttack, compYAttack));\n\n  console.log(`Computer attacks (${compXAttack}, ${compYAttack})`);\n\n  attackResult = playerBoard.receiveAttack(compXAttack, compYAttack);\n\n  const attackedCell = playerBoardWrapper.querySelector(\n    `[data-x=\"${compXAttack}\"][data-y=\"${compYAttack}\"]`\n  );\n\n  if (attackResult) {\n    attackedCell.classList.add(\"hit\");\n  } else {\n    attackedCell.classList.add(\"miss\");\n  }\n\n  if (playerBoard.allShipsSunk()) {\n    console.log(\"All player ships have been sunk. Computer wins!\");\n    // setTimeout(() => {\n    //   renderPlayerBoard(); // Reset and re-render the player board after a short delay\n    // }, 1000);\n  }\n}\n\nexport { renderCompBoard };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { Gameboard } from \"./modules/gameboard\";\nimport { Ship } from \"./modules/ships\";\nimport { Player } from \"./modules/players\";\nimport { renderCompBoard } from \"./modules/ui_comp\";\nimport { renderPlayerBoard } from \"./modules/ui_ player\";\nimport \"./style.css\";\n\nrenderCompBoard();\nrenderPlayerBoard();\n"],"names":[],"sourceRoot":""}